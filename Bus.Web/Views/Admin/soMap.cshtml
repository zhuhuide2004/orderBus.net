@{
    ViewBag.Title = "soMap";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}
 
<!--引用百度地图API-->
<style type="text/css">
    html,body{margin:0;padding:0;}
    .iw_poi_title {color:#CC5522;font-size:14px;font-weight:bold;overflow:hidden;padding-right:13px;white-space:nowrap}
    .iw_poi_content {font:12px arial,sans-serif;overflow:visible;padding-top:4px;white-space:-moz-pre-wrap;word-wrap:break-word}
</style>
<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=4120616832068ff1d7ce43fc3d4fee6f"></script>
 <script language="javascript" type="text/javascript" src="/Content/admin/js/jquery.min.js"></script>

<script type="text/javascript" src="/Content/layer/layer.min.js?v=1.6.0"></script>
@*<input type="button" id="btn_ok" value="已确定选择，返回搜索页面" style="width:160px;height:30px;float:right;" />*@
  <!--百度地图容器-->

<div style="width:auto;height:680px;border:#ccc solid 1px;" id="dituContent"></div>

<script type="text/javascript">

    $("#dituContent").css({ width: $(window).width()-2, height: $(window).height()-10 });

    //创建和初始化地图函数：
    var marker, marker2;
    window.marker = marker;

    //传入的参数
    var index = "@(Request.Params.Get("index"))";
    var lng1 = "@(Request.Params.Get("lng1"))"; var lat1 = "@(Request.Params.Get("lat1"))";
    var lng2 = "@(Request.Params.Get("lng2"))"; var lat2 = "@(Request.Params.Get("lat2"))";

    function initMap(){
        createMap();//创建地图
        setMapEvent();//设置地图事件
        addMapControl();//向地图添加控件
    }
    
    //创建地图函数：
    function createMap(){
        var map = new BMap.Map("dituContent");//在百度地图容器中创建一个地图
        var pointX = new BMap.Point(121.593478,38.94871);//定义一个中心点坐标
        map.centerAndZoom(pointX,12);//设定地图的中心点和坐标并将地图显示在地图容器中
        window.map = map;//将map变量存储在全局

        //标注传入的点
        if(lng1!="" && lng1!="0")
        {
            var point = new BMap.Point(lng1, lat1); 
            var myIcon = new BMap.Icon("/Content/images/markers.png", new BMap.Size(23, 25), {     
                offset: new BMap.Size(10, 25),       
                imageOffset: new BMap.Size(0 - 0 * 23 , 0 - 1 * 20)   // 设置图片偏移  
            }); 
            marker = new BMap.Marker(point, {icon: myIcon});    // 创建标注
            map.addOverlay(marker);             // 将标注添加到地图中
        }
        if(lng2!="" && lng2!="0")
        {
            var point2 = new BMap.Point(lng2, lat2); 
            var myIcon = new BMap.Icon("/Content/images/markers.png", new BMap.Size(23, 25), {     
                offset: new BMap.Size(10, 25),       
                imageOffset: new BMap.Size(0 - 2 * 23 , 0 - 1 * 20)   // 设置图片偏移  
            }); 
            marker2 = new BMap.Marker(point2, {icon: myIcon});    // 创建标注
            map.addOverlay(marker2);             // 将标注添加到地图中
        }
        //标注传入的点
        map.addEventListener("click", function (e) {

            if(index == "2"){
                map.removeOverlay(marker2);
                var point2 = new BMap.Point(e.point.lng,e.point.lat); 
                var myIcon = new BMap.Icon("/Content/images/markers.png", new BMap.Size(23, 25), {     
                    offset: new BMap.Size(10, 25),       
                    imageOffset: new BMap.Size(0 - 2 * 23 , 0 - 1 * 20)   // 设置图片偏移  
                }); 
                marker2 = new BMap.Marker(point2, {icon: myIcon});    // 创建标注
                map.addOverlay(marker2);             // 将标注添加到地图中
            } else {
                map.removeOverlay(marker);
                var point = new BMap.Point(e.point.lng,e.point.lat); 
                var myIcon = new BMap.Icon("/Content/images/markers.png", new BMap.Size(23, 25), {     
                    offset: new BMap.Size(10, 25),       
                    imageOffset: new BMap.Size(0 - 0 * 23 , 0 - 1 * 20)   // 设置图片偏移  
                }); 
                marker = new BMap.Marker(point, {icon: myIcon});    // 创建标注
                map.addOverlay(marker);             // 将标注添加到地图中
            }

            //回调函数
            window.parent.@(Request.Params.Get("callback"))(e.point.lng, e.point.lat);

            //marker.setAnimation(BMAP_ANIMATION_BOUNCE); //跳动的动画
            //alert(e.point.lng + "," + e.point.lat);
            //window.parent.$("#StartLatLong").val(e.point.lng + "," + e.point.lat);
            layer.msg('坐标已选取，可以关闭本窗口。', 1, 1);
            //$("#StartLat").val(e.point.lat);
            //$("#tr1").hide();
        });

    }

   
    ////地图上添加点图标    index不同图标不同
    //function addPoint(map, thisMacker, point, index){
    //    //定义图标
    //    var myIcon = new BMap.Icon("/Content/images/markers.png", new BMap.Size(23, 25), {    
    //        // 指定定位位置。   
    //        // 当标注显示在地图上时，其所指向的地理位置距离图标左上    
    //        // 角各偏移10像素和25像素。您可以看到在本例中该位置即是   
    //        // 图标中央下端的尖角位置。    
    //        offset: new BMap.Size(10, 25),    
    //        // 设置图片偏移。   
    //        // 当您需要从一幅较大的图片中截取某部分作为标注图标时，您   
    //        // 需要指定大图的偏移位置，此做法与css sprites技术类似。    
    //        imageOffset: new BMap.Size(0 - index * 23 , 0 - 1 * 20)   // 设置图片偏移  
    //    });  

    //    thisMacker = new BMap.Marker(point, {icon: myIcon});    // 创建标注
    //    map.addOverlay(thisMacker);             // 将标注添加到地图中

    //}


    function clearOverlay() {
        function removeMarker() {
            var selector = document.getElementById("markers");
            var item = selector.options[selector.selectedIndex].value;
            maplet.removeOverlay(markerArr[item]);
            selector.removeChild(selector.options[selector.selectedIndex]);
            if (selector.options.length == 0) {
                selector.parentNode.removeChild(selector);
                document.body.removeChild(document.getElementById("delBtn"));
                //document.getElementById("lab").innerHTML = "标注已经全部删除。";
                delete markerArr;
            }
        }
    }
    //地图事件设置函数：
    function setMapEvent(){
        //map.enableDragging();//启用地图拖拽事件，默认启用(可不写)
        map.enableScrollWheelZoom();//启用地图滚轮放大缩小
        //map.enableDoubleClickZoom();//启用鼠标双击放大，默认启用(可不写)
        //map.enableKeyboard();//启用键盘上下左右键移动地图
    }
    
    //地图控件添加函数：
    function addMapControl(){
        //向地图中添加缩放控件
        var ctrl_nav = new BMap.NavigationControl({anchor:BMAP_ANCHOR_TOP_LEFT,type:BMAP_NAVIGATION_CONTROL_LARGE});
        map.addControl(ctrl_nav);
        //向地图中添加缩略图控件
        var ctrl_ove = new BMap.OverviewMapControl({anchor:BMAP_ANCHOR_BOTTOM_RIGHT,isOpen:1});
        map.addControl(ctrl_ove);
        //向地图中添加比例尺控件
        var ctrl_sca = new BMap.ScaleControl({anchor:BMAP_ANCHOR_BOTTOM_LEFT});
        map.addControl(ctrl_sca);
    }
    
    
        initMap();//创建和初始化地图
</script>
